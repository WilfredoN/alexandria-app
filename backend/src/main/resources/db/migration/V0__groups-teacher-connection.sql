CREATE TABLE IF NOT EXISTS students
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name  VARCHAR(255)        NOT NULL CHECK ( LENGTH(full_name) >= 5 AND LENGTH(full_name) <= 255 ),
    login      VARCHAR(255) UNIQUE NOT NULL CHECK ( LENGTH(login) >= 3 AND LENGTH(login) <= 255 ),
    password   VARCHAR(255)        NOT NULL CHECK ( LENGTH(password) >= 6 AND LENGTH(password) <= 255 ),
    group_name VARCHAR(8)          NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS teachers
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name  VARCHAR(255)        NOT NULL CHECK ( LENGTH(full_name) >= 5 AND LENGTH(full_name) <= 255 ),
    login      VARCHAR(255) UNIQUE NOT NULL CHECK ( LENGTH(login) >= 3 AND LENGTH(login) <= 255 ),
    password   VARCHAR(255)        NOT NULL CHECK ( LENGTH(password) >= 6 AND LENGTH(password) <= 255 ),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS groups
(
    id         INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    teacher_id INTEGER REFERENCES teachers (id) ON DELETE CASCADE,
    name       VARCHAR(8) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS lessons
(
    id          INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    lesson_name VARCHAR(80) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS schedule
(
    id          INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    day_of_week VARCHAR(15) NOT NULL,
    lesson_num  INTEGER     NOT NULL CHECK ( lesson_num >= 1 AND lesson_num <= 6 ),
    week_type   INTEGER     NOT NULL CHECK ( week_type >= 0 AND week_type <= 1 ),
    lesson_id   INTEGER     NOT NULL REFERENCES lessons (id) ON DELETE CASCADE,
    group_id    INTEGER     NOT NULL REFERENCES groups (id) ON DELETE CASCADE,
    teacher_id  INTEGER     NOT NULL REFERENCES teachers (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS groups_teachers
(
    teacher_id INTEGER REFERENCES teachers (id) ON DELETE CASCADE,
    group_id   INTEGER REFERENCES groups (id) ON DELETE CASCADE,
    PRIMARY KEY (teacher_id, group_id)
);